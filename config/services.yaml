# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    locale: 'en'
services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
    admin.customer:
        class: App\Admin\CustomerAdmin
        tags:
            - {name: sonata.admin, model_class: App\Entity\Customer, manager_type: orm, label: Customer}
        calls:
            - [ setContainer, [ '@service_container' ] ]
    admin.user:
        class: App\Admin\UserAdmin
        tags:
            - {name: sonata.admin, model_class: App\Entity\User, manager_type: orm, label: User}
        calls:
            - [ setContainer, [ '@service_container' ] ]
    admin.shop:
        class: App\Admin\ShopAdmin
        tags:
            - {name: sonata.admin, model_class: App\Entity\Shop,controller: App\Controller\AdminShopCRUDController, manager_type: orm, label: Shop}
        calls:
            - [ setContainer, [ '@service_container' ] ]
    admin.shopschedule:
        class: App\Admin\ShopScheduleAdmin
        tags:
            - {name: sonata.admin, model_class: App\Entity\SpecialDate, manager_type: orm, show_in_dashboard: false}
#        calls:
#            - [ setContainer, [ '@service_container' ] ]
#    admin.shop.services:
#        class: App\Admin\ShopAdmin
#        tags:
#            - {name: sonata.admin, model_class: App\Entity\Shop,  controller: App\Controller\AdminShopCRUDController,manager_type: orm, label: 'Shop Service'}
    admin.service:
        class: App\Admin\ServiceAdmin
        tags:
            - {name: sonata.admin, model_class: App\Entity\Services, manager_type: orm, label: Product}
        calls:
            - [ setContainer, [ '@service_container' ] ]
    admin.booking:
        class: App\Admin\BookingAdmin
        tags:
            - {name: sonata.admin, model_class: App\Entity\Booking, manager_type: orm, label: Booking}
        calls:
            - [ setContainer, [ '@service_container' ] ]
    

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
